{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","console","log","data","newObject","post","id","put","delete","Filter","newFilter","setNewFilter","value","onChange","event","target","Form","persons","newName","newNumber","setPersons","setNewName","setNewNumber","statusMessage","setStatusMessage","onSubmit","preventDefault","existingPersonArray","filter","person","name","length","existingPerson","window","confirm","changedPerson","number","personService","returnedPerson","map","success","setTimeout","concat","catch","error","type","Persons","filteredPersons","toLowerCase","includes","key","onClick","personObject","personTemp","deletePerson","Notification","className","App","useState","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dfc4fb7.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    console.log(response.data)\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React, { useState, useEffect } from \"react\"\r\nimport personService from \"./services/persons\"\r\n\r\nconst Filter = ({ newFilter, setNewFilter }) => {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      filter with shown: <input value={newFilter} onChange={event => setNewFilter(event.target.value)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Form = ({ persons, newName, newNumber, setPersons, setNewName, setNewNumber, statusMessage, setStatusMessage }) => {\r\n  const addPerson = event => {\r\n    event.preventDefault()\r\n\r\n    const existingPersonArray = persons.filter(person => person.name === newName)\r\n    console.log(existingPersonArray)\r\n\r\n    if (existingPersonArray.length > 0) {\r\n      const existingPerson = existingPersonArray[0]\r\n      if (window.confirm(`${existingPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const changedPerson = { name: existingPerson.name, number: newNumber }\r\n\r\n        personService.update(existingPerson.id, changedPerson).then(returnedPerson => {\r\n          setPersons(persons.map(person => (person.id !== existingPerson.id ? person : returnedPerson)))\r\n          setStatusMessage({ ...statusMessage, success: `Updated ${existingPerson.name}` })\r\n          setTimeout(() => {\r\n            setStatusMessage({ ...statusMessage, success: null })\r\n          }, 5000)\r\n          console.log(\"updated\", persons)\r\n        })\r\n      }\r\n      return\r\n    }\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    personService\r\n      .create(personObject)\r\n      .then(returnedPerson => {\r\n        console.log(returnedPerson)\r\n        setStatusMessage({ ...statusMessage, success: `Added ${returnedPerson.name}` })\r\n        setTimeout(() => {\r\n          setStatusMessage({ ...statusMessage, success: null })\r\n        }, 5000)\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNewName(\"\")\r\n        setNewNumber(\"\")\r\n      })\r\n      .catch(error => {\r\n        /*\r\n        let firstSplit = error.response.data.split(\"<pre>\")\r\n        let secondSplit = firstSplit[1].split(\"<br>\")\r\n        */\r\n        console.log(error.response.data)\r\n        setStatusMessage({ ...statusMessage, error: `${error.response.data}` })\r\n        setTimeout(() => {\r\n          setStatusMessage({ ...statusMessage, error: null })\r\n        }, 5000)\r\n      })\r\n  }\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={event => setNewName(event.target.value)} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input value={newNumber} onChange={event => setNewNumber(event.target.value)} />\r\n      </div>\r\n      <div>\r\n        <button type='submit'>add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Persons = ({ persons, setPersons, newFilter, statusMessage, setStatusMessage }) => {\r\n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n  const deletePerson = person => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      personService\r\n        .remove(person.id)\r\n        .then(response => {\r\n          setPersons(persons.filter(personObject => personObject.id !== person.id))\r\n          setStatusMessage({ ...statusMessage, success: `Deleted ${person.name}` })\r\n          console.log(statusMessage)\r\n          setTimeout(() => {\r\n            setStatusMessage({ ...statusMessage, success: null })\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          setPersons(persons.filter(personTemp => personTemp.id !== person.id))\r\n          setStatusMessage({ ...statusMessage, error: `Information of ${person.name} has already been removed from the server` })\r\n          setTimeout(() => {\r\n            setStatusMessage({ ...statusMessage, error: null })\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {filteredPersons.map(person => (\r\n        <p key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => deletePerson(person)}>delete</button>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({ statusMessage }) => {\r\n  if (statusMessage.success) {\r\n    return (\r\n      <>\r\n        <div className='success'>{statusMessage.success}</div>\r\n      </>\r\n    )\r\n  } else if (statusMessage.error) {\r\n    return (\r\n      <>\r\n        <div className='error'>{statusMessage.error}</div>\r\n      </>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState(\"\")\r\n  const [newNumber, setNewNumber] = useState(\"\")\r\n  const [newFilter, setNewFilter] = useState(\"\")\r\n  const [statusMessage, setStatusMessage] = useState({ success: null, error: null })\r\n\r\n  useEffect(() => {\r\n    console.log(\"effect\")\r\n    personService.getAll().then(initialPersons => setPersons(initialPersons))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification statusMessage={statusMessage} />\r\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter} />\r\n      <h2>Add a new</h2>\r\n      <Form\r\n        persons={persons}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        setPersons={setPersons}\r\n        setNewName={setNewName}\r\n        setNewNumber={setNewNumber}\r\n        statusMessage={statusMessage}\r\n        setStatusMessage={setStatusMessage}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} setPersons={setPersons} newFilter={newFilter} statusMessage={statusMessage} setStatusMessage={setStatusMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}